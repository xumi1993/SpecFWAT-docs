<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home | SpecFWAT Docs</title><link>https://specfwat.xumijian.me/</link><atom:link href="https://specfwat.xumijian.me/index.xml" rel="self" type="application/rss+xml"/><description>Home</description><generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Tue, 24 Oct 2023 00:00:00 +0000</lastBuildDate><image><url>https://specfwat.xumijian.me/media/logo.svg</url><title>Home</title><link>https://specfwat.xumijian.me/</link></image><item><title>Install Dependencies</title><link>https://specfwat.xumijian.me/docs/get-started/installation/dependence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://specfwat.xumijian.me/docs/get-started/installation/dependence/</guid><description>&lt;p>SpecFWAT requires several dependencies to compile and run.&lt;/p>
&lt;p>&lt;strong>Required dependencies:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Cmake (&amp;gt;= 3.20)&lt;/li>
&lt;li>Fortran compiler (Gfortran &amp;gt;= 11.0 or Intel Fortran &amp;gt;= 19.0)&lt;/li>
&lt;li>MPI (&amp;gt;= 4.0)&lt;/li>
&lt;li>hdf5 (&amp;gt;= 1.10)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Optional dependencies:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>CUDA (&amp;gt;= 11.0) for GPU acceleration&lt;/li>
&lt;/ul>
&lt;div class="flex px-4 py-3 mb-6 rounded-md bg-primary-100 dark:bg-primary-900">
&lt;span class="pr-3 pt-1 text-primary-600 dark:text-primary-300">
&lt;svg height="24" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m11.25 11.25l.041-.02a.75.75 0 0 1 1.063.852l-.708 2.836a.75.75 0 0 0 1.063.853l.041-.021M21 12a9 9 0 1 1-18 0a9 9 0 0 1 18 0m-9-3.75h.008v.008H12z"/>&lt;/svg>
&lt;/span>
&lt;span class="dark:text-neutral-300">These versions are the minimum required for SpecFWAT that are known to work. Higher versions may be available, and you can use them if you prefer.&lt;/span>
&lt;/div>
&lt;p>The following sections provide instructions for installing these dependencies on different platforms.&lt;/p>
&lt;h2 id="for-personal-computers">For personal computers&lt;/h2>
&lt;p>To install the dependencies for SpecFWAT on your personal computer, we recommend using the &lt;a href="https://docs.conda.io/en/latest/" target="_blank" rel="noopener">Conda&lt;/a> package manager.&lt;/p>
&lt;div class="hb-steps">
&lt;h3 id="create-a-new-conda-environment">Create a new conda environment&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">conda create -n specfwat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">conda activate specfwat
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-dependencies">Install dependencies&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">conda install -c conda-forge fortran-compiler c-compiler cmake openmpi hdf5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;h2 id="for-high-performance-computing-hpc-systems">For High Performance Computing (HPC) systems&lt;/h2>
&lt;p>To install the dependencies for SpecFWAT on supercomputers, we recommend to load the required modules using the module system.&lt;/p>
&lt;h3 id="n40bscc-nvidia-rtx-4090">N40@BSCC (Nvidia RTX 4090)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">module load openmpi/4.1.5_gcc11.2_ucx1.14.1_cuda11.8 cmake/3.30.0 cuda/11.8 hdf5/1.13.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="niagaraccdb-cpu-only">Niagara@CCDB (CPU only)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">module --force purge
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">module load NiaEnv/2022a intel openmpi hdf5 netcdf cmake
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Configuration</title><link>https://specfwat.xumijian.me/docs/get-started/installation/build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://specfwat.xumijian.me/docs/get-started/installation/build/</guid><description>&lt;p>SpecFWAT is built using CMake, a cross-platform build system. The following instructions will guide you through the process of building SpecFWAT on your system.&lt;/p>
&lt;div class="hb-steps">
&lt;h3 id="create-a-build-directory">Create a build directory&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir build &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-the-build">configure the build&lt;/h3>
&lt;p>Bascially, you can use the following command to configure the build:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cmake ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>
&lt;h3 id="more-options">More options&lt;/h3>
&lt;h4 id="1-specify-compilers">1. Specify Compilers:&lt;/h4>
&lt;p>If you have multiple compilers installed, you can specify the Fortran and C compilers using the &lt;code>FC&lt;/code> and &lt;code>CC&lt;/code> options, respectively. For example on &lt;strong>Niagara@CCDB&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CC&lt;/span>&lt;span class="o">=&lt;/span>icc &lt;span class="nv">CXX&lt;/span>&lt;span class="o">=&lt;/span>icpc &lt;span class="nv">FC&lt;/span>&lt;span class="o">=&lt;/span>mpifort &lt;span class="nv">MPIFC&lt;/span>&lt;span class="o">=&lt;/span>mpifort cmake ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>More options can be specified in the &lt;code>cmake&lt;/code> command. For example, you can specify the HDF5 directory and enable GPU support. Here are some common options:&lt;/p>
&lt;h4 id="2-specify-the-hdf5-directory">2. Specify the HDF5 directory:&lt;/h4>
&lt;p>If the hdf5 library is not installed in library path, you can specify its path using the &lt;code>HDF5_ROOT&lt;/code> option. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cmake -DHDF5_ROOT&lt;span class="o">=&lt;/span>/path/to/hdf5 ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="3-enable-gpu-support">3. Enable GPU support:&lt;/h4>
&lt;p>Currently, SpecFWAT only supports CUDA for GPU acceleration. The CUDA architecture can be specified using the &lt;code>CUDA_ARCH&lt;/code> option. Check the table below for the supported architectures:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>CUDA_ARCH&lt;/th>
&lt;th>Architecture&lt;/th>
&lt;th>Example Card&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>0 (default)&lt;/td>
&lt;td>GPU on current machine&lt;/td>
&lt;td>N/A&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>Tesla&lt;/td>
&lt;td>K10, Geforce GTX 650&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>5&lt;/td>
&lt;td>Kepler&lt;/td>
&lt;td>K20&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>6&lt;/td>
&lt;td>Kepler&lt;/td>
&lt;td>K80&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>7&lt;/td>
&lt;td>Maxwell&lt;/td>
&lt;td>Quadro K2200&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>8&lt;/td>
&lt;td>Pascal&lt;/td>
&lt;td>P100&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>9&lt;/td>
&lt;td>Volta&lt;/td>
&lt;td>V100&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>Turing&lt;/td>
&lt;td>GeForce RTX 2080&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>11&lt;/td>
&lt;td>Ampere&lt;/td>
&lt;td>A100&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>12&lt;/td>
&lt;td>Hopper&lt;/td>
&lt;td>H100&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>For example, to enable CUDA support and set the architecture to Ampere (A100), you can use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cmake -DUSE_CUDA&lt;span class="o">=&lt;/span>on -DCUDA_ARCH&lt;span class="o">=&lt;/span>&lt;span class="m">8&lt;/span> ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Compilation</title><link>https://specfwat.xumijian.me/docs/get-started/installation/compile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://specfwat.xumijian.me/docs/get-started/installation/compile/</guid><description>&lt;p>After configuring the build, you can compile SpecFWAT using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">make -j4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Following executables will be generated in the &lt;code>bin&lt;/code> directory:&lt;/p>
&lt;ul>
&lt;li>&lt;code>xfwat_mesh_databases&lt;/code> : Generate mesh databases for SPECFEM3D from a &lt;code>*.h5&lt;/code> model file.&lt;/li>
&lt;li>&lt;code>xfwat_fwd_measure_adj&lt;/code>: Forward modeling, measuring adjoint source, and adjoint simulation.&lt;/li>
&lt;li>&lt;code>xfwat_post_proc&lt;/code>: Takes sum of kernels, preconditioner, and model regularization.&lt;/li>
&lt;li>&lt;code>xfwat_optimize&lt;/code>: Get descent direction and update model.&lt;/li>
&lt;/ul></description></item></channel></rss>